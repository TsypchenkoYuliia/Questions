[{"C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\App.js":"1","C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\reportWebVitals.js":"2","C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\pages\\AskQuestion.js":"3","C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\pages\\Questions.js":"4","C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\index.js":"5","C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\pages\\AskQuestion.js":"6","C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\App.js":"7","C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\initialize.js":"8","C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\pages\\Questions.js":"9","C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\pages\\Question.js":"10"},{"size":515,"mtime":1612084403157,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609506889662,"results":"13","hashOfConfig":"12"},{"size":1928,"mtime":1612090941586,"results":"14","hashOfConfig":"12"},{"size":0,"mtime":1612084237923,"results":"15","hashOfConfig":"12"},{"size":500,"mtime":1609506889662,"results":"16","hashOfConfig":"17"},{"size":4774,"mtime":1612105508061,"results":"18","hashOfConfig":"17"},{"size":720,"mtime":1612105127265,"results":"19","hashOfConfig":"17"},{"size":509,"mtime":1612102166140,"results":"20","hashOfConfig":"17"},{"size":0,"mtime":1612084237923,"results":"21","hashOfConfig":"17"},{"size":115,"mtime":1612105170893,"results":"22","hashOfConfig":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1weo51u",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cj0foe",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\App.js",[],"C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\reportWebVitals.js",[],"C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\pages\\AskQuestion.js",[],"C:\\Users\\tsypa\\Desktop\\Questions\\my-questions\\src\\pages\\Questions.js",[],"C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\index.js",[],"C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\pages\\AskQuestion.js",["44","45"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Input, Button, Select, Typography,Modal } from 'antd';\r\nimport {\r\n    BoldOutlined, ItalicOutlined, UnderlineOutlined,\r\n    UnorderedListOutlined, OrderedListOutlined, LinkOutlined, PictureOutlined\r\n} from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction AskQuestion() {\r\n\r\n    let history = useHistory();\r\n\r\n    const questions = (JSON.parse(localStorage.getItem(\"questions\")));\r\n    const[title, SetTitle] = useState(\"\");\r\n    const[textQuestion, SetTextQuestion] = useState(\"\");\r\n    const topics = (JSON.parse(localStorage.getItem(\"topics\")));\r\n    const[topic, SetTopic] = useState(\"\");\r\n    const[selectedTopics, SetSelectedTopics] = useState([]);\r\n    const { Option } = Select;\r\n\r\n    const topicSelect = [];\r\n\r\n        topics.map((item)=> {\r\n            topicSelect.push(<Option key={item.title}>{item.title}</Option>)});\r\n       \r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const { TextArea } = Input;\r\n    const { Text } = Typography;\r\n\r\n    function handleChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    function handleChangeTopic(value) {\r\n        selectedTopics.push(value);\r\n        SetSelectedTopics(selectedTopics);\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n\r\n        var item = {\r\n            \"id\":topics.length+1,\r\n            \"title\": topic,\r\n        };\r\n\r\n        topics.push(item);\r\n        localStorage.setItem(\"topics\", JSON.stringify(topics));\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const saveQuestion = () => {\r\n\r\n        let id = questions.length+1;\r\n\r\n        var item = {\r\n            \"id\":id,\r\n            \"title\": title,\r\n            \"textQuestion\": textQuestion,\r\n            \"topics\": selectedTopics\r\n        };\r\n\r\n        questions.push(item);\r\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\r\n        history.replace('/question/' + id);\r\n    };\r\n\r\n    const cancelQuestion = () => {\r\n        history.replace('/questions');\r\n    };\r\n\r\n    const titleChange = (event) => {\r\n        SetTitle(event.target.value);\r\n    };\r\n\r\n    const textChange = (event) => {\r\n        SetTextQuestion(event.target.value);\r\n    };\r\n\r\n    const topicAdded = (event) => {\r\n        SetTopic(event.target.value);\r\n    };\r\n\r\n    \r\n\r\n    return <div className=\"askContainer\">\r\n        <span className='title'>Ask a question</span>\r\n        <Input placeholder=\"What do you want to know?\" onChange={titleChange} value={title}/>\r\n        <div className='block'>\r\n            <div className='buttonsContainer' style={{ marginTop: '20px' }}  >\r\n                <Select defaultValue=\"Paragraf\" style={{ width: 100 }} onChange={handleChange}>\r\n                    <Option value=\"Heading\">Heading</Option>\r\n                    <Option value=\"Text\">Text</Option>\r\n                </Select>\r\n                <BoldOutlined style={{ margin: 'auto' }} />\r\n                <ItalicOutlined style={{ margin: 'auto' }} />\r\n                <UnderlineOutlined style={{ margin: 'auto' }} />\r\n                <UnorderedListOutlined style={{ margin: 'auto' }} />\r\n                <OrderedListOutlined style={{ margin: 'auto' }} />\r\n                <LinkOutlined style={{ margin: 'auto' }} />\r\n                <PictureOutlined style={{ margin: 'auto' }} />\r\n            </div>\r\n            <TextArea rows={6} onChange={textChange}/>\r\n\r\n            <Text style={{ marginTop: '10px', textAlign: 'left', marginTop: '20px' }}>Popular topics:</Text>\r\n\r\n            <div className='topicContainer'>\r\n                <Select\r\n                    mode=\"tags\"\r\n                    size={topics.length}\r\n                    placeholder=\"Please select topic\"\r\n                    onChange={handleChangeTopic}\r\n                    style={{ width: '100%', textAlign: 'left', marginTop: '20px' }}>\r\n                       {topicSelect}\r\n                </Select>\r\n                <Button style={{ marginTop: '20px' }} type=\"primary\" onClick={showModal}>+</Button>\r\n            </div>\r\n            <div>\r\n                <Button style={{ marginTop: '20px', float: 'left' }} type=\"primary\" onClick={saveQuestion}>Save</Button>\r\n                <Button style={{ marginTop: '20px', float: 'left' }} type=\"text\" onClick={cancelQuestion}>Cancel</Button>\r\n            </div>\r\n            <Modal title='Adding' visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Input placeholder=\"Enter new topic\" value={topic} onChange={topicAdded}/>   \r\n            </Modal>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default AskQuestion;","C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\App.js",[],"C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\initialize.js",["46","47"],"C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\pages\\Questions.js",[],"C:\\Users\\tsypa\\Desktop\\Questions-1\\src\\pages\\Question.js",[],{"ruleId":"48","severity":1,"message":"49","line":25,"column":26,"nodeType":"50","messageId":"51","endLine":25,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":115,"column":66,"nodeType":"54","messageId":"55","endLine":115,"endColumn":75},{"ruleId":"56","severity":1,"message":"57","line":7,"column":48,"nodeType":"58","messageId":"55","endLine":7,"endColumn":50},{"ruleId":"56","severity":1,"message":"57","line":14,"column":42,"nodeType":"58","messageId":"55","endLine":14,"endColumn":44},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression"]